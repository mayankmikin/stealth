<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
<!-- 	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/context/root-context.xml</param-value>
	</context-param> -->
	
	 <welcome-file-list>
        <welcome-file>security/login.html</welcome-file> 
       <!--  <welcome-file>index.jsp</welcome-file> -->
    </welcome-file-list>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- Filters for spring security -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
      <!-- <url-pattern>/entry.html</url-pattern> -->
    </filter-mapping>
<filter>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
		<init-param>
			<param-name>entityManagerFactory</param-name>
			<param-value>entityManagerFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping>
	<!-- Processes application requests -->
	
	  <!-- Servlets -->
	  <!-- In this if you will not provide init param then spring will look for spring-servlet.xml so do this --> 
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
			 WEB-INF/context/servlet-context.xml 
			</param-value>
		</init-param>		
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 
	if this listener is not applied then request scope will not work and spring security will not call CustomAuthenticationSuccessHandler class
	methods on Authorization as this method is returing request.context()  -->
	
	<listener>
    <listener-class>
        org.springframework.web.context.request.RequestContextListener
    </listener-class>
  </listener>
  <!-- Creates the Spring Container shared by all Servlets and Filters -->
  <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	 <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>         
            <!-- WEB-INF/context/spring-security.xml -->
            WEB-INF/context/spring-security2.xml
            WEB-INF/context/applicationContext.xml
            WEB-INF/context/servlet-context.xml 
        </param-value>
    </context-param>
	<listener>
        <listener-class>com.app.myapp.web.listener.SessionListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.app.myapp.web.listener.StartupListener</listener-class>
    </listener>
	
	
	
</web-app>
